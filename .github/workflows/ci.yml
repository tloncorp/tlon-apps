name: CI (Test and Build)
on: pull_request
jobs:
  test-build:
    runs-on:
      - self-hosted
      - Linux
      - X64
    steps:
      - name: Clean workspace (Fedora container fix)
        if: runner.os == 'Linux'
        run: |
          # Clean up any root-owned files from previous container runs
          if [ -f /etc/os-release ] && grep -qiE "fedora|rhel|centos|rocky|alma" /etc/os-release; then
            echo "Detected Fedora - fixing permissions on workspace from previous runs"
            # The workspace path exists even before checkout
            WORKSPACE_PATH="${{ github.workspace }}"
            if [ -d "$WORKSPACE_PATH" ]; then
              echo "Fixing permissions on $WORKSPACE_PATH"
              # Use podman to fix permissions as root
              podman run --rm \
                -v "$WORKSPACE_PATH:/workspace:Z" \
                --security-opt label=disable \
                docker.io/ubuntu:22.04 \
                bash -c "chmod -R 777 /workspace 2>/dev/null || true"
            else
              echo "Workspace doesn't exist yet, skipping cleanup"
            fi
          fi
        continue-on-error: true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]

      - name: Run Lint
        run: pnpm -r lint

      - name: Build editor package (allows us to run type checks)
        run: pnpm build:editor

      - name: Check Types
        run: pnpm -r tsc

      - name: Run Tests
        run: pnpm test:ci

      - name: Build packages
        run: pnpm build:all

      - name: Get Playwright version
        id: playwright-version
        run:
          echo "version=$(node -p
          "require('@playwright/test/package.json').version")" >> $GITHUB_OUTPUT
        working-directory: ./apps/tlon-web

      - name: Cache Playwright browsers
        # Skip cache on Fedora since we'll use container
        if:
          ${{ !contains(runner.os, 'Linux') || !contains(runner.name, 'fedora')
          }}
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key:
            playwright-${{ runner.os }}-${{
            steps.playwright-version.outputs.version }}
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          # Only install on non-Fedora systems since Fedora will use container
          if [ -f /etc/os-release ] && grep -qiE "fedora|rhel|centos|rocky|alma" /etc/os-release; then
            echo "Skipping browser install on Fedora - will be installed in container"
          else
            pnpm exec playwright install chromium
          fi
        working-directory: ./apps/tlon-web

      - name: Run Production Build Smoke Test
        id: smoke-test
        run: |
          # Check if we're on Fedora and need container workaround
          if [ -f /etc/os-release ] && grep -qiE "fedora|rhel|centos|rocky|alma" /etc/os-release; then
            echo "Detected Fedora/RHEL - running smoke test in Ubuntu container"
            
            # Read Node version from .nvmrc
            NODE_VERSION=$(cat ../../.nvmrc)
            echo "Using Node.js version: $NODE_VERSION"
            
            # Function to run test in container
            run_smoke_test() {
              podman run --rm \
                -v "$PWD/../..:/workspace:Z" \
                -w /workspace \
                --network host \
                --security-opt label=disable \
                -e CI=true \
                docker.io/ubuntu:22.04 \
                bash -c "
                  # Install dependencies
                  apt-get update && apt-get install -y curl git build-essential netcat-openbsd
                  
                  # Install specific Node.js version
                  curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
                  apt-get install -y nodejs
                  npm install -g n
                  n ${NODE_VERSION}
                  hash -r
                  
                  # Install pnpm
                  npm install -g pnpm@9.0.5
                  
                  # Install dependencies
                  cd /workspace
                  pnpm install --frozen-lockfile
                  
                  # Install Playwright browsers and dependencies
                  cd apps/tlon-web
                  pnpm exec playwright install --with-deps chromium
                  
                  # Run production smoke test
                  pnpm e2e:prod:smoke:force
                  
                  # Fix permissions on created files for host user
                  chmod -R 777 /workspace/apps/tlon-web/rube/dist || true
                "
            }
            
            # Try once, retry if failed
            run_smoke_test || (echo "::warning::Production smoke test failed, retrying..." && run_smoke_test)
          else
            echo "Not on Fedora/RHEL - running smoke test directly"
            pnpm e2e:prod:smoke:force || (echo "::warning::Production smoke test failed, retrying..." && pnpm e2e:prod:smoke:force)
          fi
        working-directory: ./apps/tlon-web
        continue-on-error: false

      - name: Upload Production Test Artifacts
        if: failure() && steps.smoke-test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: production-smoke-test-results
          path: |
            ./apps/tlon-web/test-results/
            ./apps/tlon-web/playwright-report/
          retention-days: 7

      # For some reason, caching is breaking with the new piers.
      # TODO: fix this.
      # - name: Cache E2E Piers
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ./apps/tlon-web/rube/dist/urbit_binary.tgz
      #       ./apps/tlon-web/rube/dist/urbit_extracted/
      #       ./apps/tlon-web/rube/dist/zod/
      #       ./apps/tlon-web/rube/dist/bus/
      #     key: e2e-piers-${{ hashFiles('apps/tlon-web/e2e/shipManifest.json') }}
      #     restore-keys: |
      #       e2e-piers-

      - name: Run E2E Tests for Groups
        # Use Ubuntu container to avoid Fedora/Urbit binary compatibility issues
        run: |
          # Check if we're on Fedora and need container workaround
          if [ -f /etc/os-release ] && grep -qiE "fedora|rhel|centos|rocky|alma" /etc/os-release; then
            echo "Detected Fedora/RHEL - running tests in Ubuntu container for Urbit compatibility"
            
            # Read Node version from .nvmrc (two directories up from apps/tlon-web)
            NODE_VERSION=$(cat ../../.nvmrc)
            echo "Using Node.js version: $NODE_VERSION"
            
            podman run --rm \
              -v "$PWD/../..:/workspace:Z" \
              -w /workspace \
              --network host \
              --security-opt label=disable \
              -e CI=true \
              -e VITE_INVITE_PROVIDER="${VITE_INVITE_PROVIDER}" \
              -e VITE_INVITE_SERVICE_ENDPOINT="${VITE_INVITE_SERVICE_ENDPOINT}" \
              -e FORCE_EXTRACTION=true \
              docker.io/ubuntu:22.04 \
              bash -c "
                # Install dependencies
                apt-get update && apt-get install -y curl git build-essential netcat-openbsd
                
                # Install specific Node.js version
                curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
                apt-get install -y nodejs
                npm install -g n
                n ${NODE_VERSION}
                hash -r
                
                # Install pnpm
                npm install -g pnpm@9
                
                # Verify versions
                echo 'Node version:' && node --version
                echo 'pnpm version:' && pnpm --version
                
                # Install dependencies
                cd /workspace
                pnpm install --frozen-lockfile
                
                # Install Playwright browsers and dependencies
                cd apps/tlon-web
                pnpm exec playwright install --with-deps chromium
                
                # Run tests
                pnpm e2e:force
                
                # Fix permissions on all created files for host user
                chmod -R 777 /workspace || true
              "
          else
            echo "Not on Fedora/RHEL - running tests directly"
            pnpm e2e:force
          fi
        working-directory: ./apps/tlon-web
        env:
          VITE_INVITE_PROVIDER: http://localhost:39983
          VITE_INVITE_SERVICE_ENDPOINT: https://serverless-infra.vercel.app/api/inviteLink

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./apps/tlon-web/playwright-report/
          retention-days: 30
